program = TK_MAIN TK_FUNID : $
mainFunction = TK_MAIN : $
otherFunctions = # TK_FUNID : TK_MAIN
function = TK_FUNID : TK_FUNID TK_MAIN
input_par = TK_INPUT : TK_OUTPUT TK_SEM
output_par = # TK_OUTPUT : TK_SEM
parameter_list = TK_REAL TK_UNION TK_INT TK_RUID TK_RECORD : TK_SQR
dataType = TK_RUID TK_UNION TK_RECORD TK_REAL TK_INT : TK_COLON TK_ID
primitiveDatatype = TK_INT TK_REAL : TK_COLON TK_ID
constructedDatatype = TK_RECORD TK_RUID TK_UNION : TK_ID TK_COLON
remaining_list = # TK_COMMA : TK_SQR
stmts = TK_SQL TK_RECORD TK_TYPE TK_WRITE TK_DEFINETYPE TK_WHILE TK_ID TK_READ TK_CALL TK_RETURN TK_UNION TK_IF : TK_END
typeDefinitions = # TK_RECORD TK_UNION TK_DEFINETYPE : TK_IF TK_SQL TK_WRITE TK_TYPE TK_ID TK_WHILE TK_READ TK_CALL TK_RETURN
actualOrRedefined = TK_DEFINETYPE TK_UNION TK_RECORD : TK_DEFINETYPE TK_RETURN TK_CALL TK_RECORD TK_WRITE TK_ID TK_UNION TK_READ TK_WHILE TK_TYPE TK_SQL TK_IF
typeDefinition = TK_UNION TK_RECORD : TK_UNION TK_TYPE TK_ID TK_IF TK_READ TK_RECORD TK_DEFINETYPE TK_SQL TK_CALL TK_WRITE TK_WHILE TK_RETURN
fieldDefinitions = TK_TYPE : TK_ENDUNION TK_ENDRECORD
fieldDefinition = TK_TYPE : TK_ENDUNION TK_ENDRECORD TK_TYPE
moreFields = # TK_TYPE : TK_ENDUNION TK_ENDRECORD
declarations = TK_TYPE # : TK_CALL TK_IF TK_ID TK_RETURN TK_READ TK_SQL TK_WHILE TK_WRITE
declaration = TK_TYPE : TK_CALL TK_IF TK_WRITE TK_TYPE TK_RETURN TK_ID TK_READ TK_WHILE TK_SQL
global_or_not = # TK_COLON : TK_SEM
otherStmts = TK_ID TK_SQL # TK_READ TK_WRITE TK_WHILE TK_IF TK_CALL : TK_ELSE TK_ENDIF TK_RETURN TK_ENDWHILE
stmt = TK_IF TK_WRITE TK_WHILE TK_ID TK_SQL TK_READ TK_CALL : TK_RETURN TK_WHILE TK_WRITE TK_READ TK_ELSE TK_SQL TK_CALL TK_IF TK_ENDWHILE TK_ID TK_ENDIF
assignmentStmt = TK_ID : TK_ENDIF TK_ID TK_ELSE TK_IF TK_CALL TK_WRITE TK_READ TK_SQL TK_WHILE TK_ENDWHILE TK_RETURN
singleOrRecId = TK_ID : TK_MUL TK_DIV TK_MINUS TK_NE TK_EQ TK_GT TK_ASSIGNOP TK_CL TK_GE TK_PLUS TK_LT TK_LE TK_SEM
ifRecField = TK_DOT # : TK_CL TK_GE TK_EQ TK_ASSIGNOP TK_DIV TK_LE TK_NE TK_GT TK_LT TK_MINUS TK_PLUS TK_SEM TK_MUL
funCallStmt = TK_SQL TK_CALL : TK_IF TK_RETURN TK_CALL TK_ID TK_ELSE TK_READ TK_WRITE TK_SQL TK_ENDWHILE TK_WHILE TK_ENDIF
outputParameters = TK_SQL # : TK_CALL
inputParameters = TK_SQL : TK_SEM
iterativeStmt = TK_WHILE : TK_ELSE TK_ENDWHILE TK_SQL TK_WHILE TK_WRITE TK_CALL TK_READ TK_ID TK_RETURN TK_ENDIF TK_IF
conditionalStmt = TK_IF : TK_CALL TK_IF TK_ID TK_SQL TK_WRITE TK_ENDIF TK_ENDWHILE TK_READ TK_WHILE TK_ELSE TK_RETURN
elsePart = TK_ENDIF TK_ELSE : TK_SQL TK_ID TK_ENDWHILE TK_READ TK_ELSE TK_ENDIF TK_IF TK_WHILE TK_RETURN TK_CALL TK_WRITE
ioStmt = TK_WRITE TK_READ : TK_CALL TK_READ TK_SQL TK_ELSE TK_ID TK_RETURN TK_IF TK_WRITE TK_ENDWHILE TK_WHILE TK_ENDIF
arithmeticExpression = TK_ID TK_NUM TK_OP TK_RNUM : TK_SEM TK_CL
expression' = TK_PLUS TK_MINUS # : TK_CL TK_SEM
term = TK_OP TK_ID TK_NUM TK_RNUM : TK_CL TK_MINUS TK_SEM TK_PLUS
term' = TK_DIV TK_MUL # : TK_MINUS TK_CL TK_PLUS TK_SEM
factor = TK_OP TK_NUM TK_ID TK_RNUM : TK_MUL TK_DIV TK_SEM TK_CL TK_MINUS TK_PLUS
lowPrecedenceOperators = TK_PLUS TK_MINUS : TK_ID TK_RNUM TK_OP TK_NUM
highPrecedenceOperators = TK_MUL TK_DIV : TK_RNUM TK_OP TK_NUM TK_ID
booleanExpression = TK_ID TK_OP TK_NUM TK_RNUM TK_NOT : TK_CL
var = TK_NUM TK_RNUM TK_ID : TK_DIV TK_CL TK_MINUS TK_NE TK_PLUS TK_MUL TK_EQ TK_GE TK_LE TK_LT TK_SEM TK_GT
logicalOp = TK_OR TK_AND : TK_OP
relationalOp = TK_EQ TK_LT TK_NE TK_GE TK_GT TK_LE : TK_ID TK_NUM TK_RNUM
returnStmt = TK_RETURN : TK_END
optionalReturn = TK_SQL # : TK_SEM
idList = TK_ID : TK_SQR
more_ids = # TK_COMMA : TK_SQR
definetypestmt = TK_DEFINETYPE : TK_WRITE TK_ID TK_WHILE TK_RETURN TK_READ TK_SQL TK_IF TK_DEFINETYPE TK_CALL TK_RECORD TK_UNION TK_TYPE
a = TK_UNION TK_RECORD : TK_RUID
